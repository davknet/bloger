

services:
  nginx_proxy:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./backend/public:/var/www/html     # Serve Laravel backend
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    tty: true   
    container_name: laravel_app
    volumes:
      - ./backend:/var/www/html
    networks:
      - app_network
    ports:
      - "8181:9000"  
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=true
      - DB_HOST=${DB_HOST}
      - REDIS_HOST=${REDIS_HOST}
    env_file:
      - ./.env  
    depends_on:
      - database
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_app
    environment:
      - NODE_ENV=production
    networks:
      - app_network
    volumes:
     - ./frontend:/app
    ports:
     - "3000:80"
    

  database:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network
    env_file:
      - ./.env  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5  

  redis:
    image: redis:alpine
    container_name: redis_cache
    networks:
      - app_network

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8081:8080"
    depends_on:
      - database
    networks:
      - app_network

volumes:
  db_data:
  react-build:   # Shared volume for React build artifacts
networks:
  app_network:
    driver: bridge
